<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /nh7+hegrA66U7rSJgAAAABJRU5ErkJggg==
</value>
  </data>
</root>